{"version":3,"sources":["Pages/Components/images/Logo2.png","Pages/Components/SearchBar.js","Pages/Components/NavBar.js","Pages/Components/Footer.js","Pages/Components/MovieCard.js","Pages/Home.js","Pages/SearchResult.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","SearchBar","_ref","movies","placeholder","navigate","useNavigate","inputValue","setInputValue","useState","filteredMovies","setFilteredMovies","notFound","setNotFound","buttonSubmit","flag","movie","toLowerCase","concat","React","createElement","className","type","title","onChange","event","wordEntered","target","value","trim","newFilter","filter","includes","length","onKeyPress","e","key","onClick","slice","map","NavBar","isHome","Link","to","src","Logo","alt","href","rel","Footer","id","MovieCard","currentMovie","goToMovie","window","location","reload","poster_path","vote_average","class","aria-hidden","Home","apiKey","process","list","setList","homeGenreList","setHomeGenreList","selectedGenres","setSelectedGenres","currMovies","setCurrMovies","useEffect","fetch","then","Response","json","data","arr","genres","encodeURI","join","results","genre","genreId","isPresent","item","onTagClick","name","original_title","SearchResult","params","useParams","searchedMovie","setSearchedMovie","recommendedMovies","setRecommendedMovies","castMembers","setCastMembers","genreList","setGenreList","currGenre","setCurrGenre","videoData","setVideoData","playTrailer","setPlayTrailer","gotTMDBData","apiData","realMovieData","genre_ids","castData","counter","cast","gotCast","videos","trailer","find","vid","gotVideo","gotRecommendedData","style","backgroundImage","backdrop_path","ReactPlayer","url","playing","width","height","controls","overview","member","JSON","stringify","cast_id","profile_path","release_date","movieId","ind","obj","App","Router","Routes","Route","exact","path","element","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.12e9792b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo2.a4b61053.png\";","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./styles/SearchBarStyles.css\";\n\nfunction SearchBar({ movies, placeholder }) {\n    const navigate = useNavigate();\n    const [inputValue, setInputValue] = useState(\"\");\n    const [filteredMovies, setFilteredMovies] = useState([]);\n    const [notFound, setNotFound] = useState(false);\n    const handleChange = (event) => {\n        /*Handling the change in inputValue when the user types in the searchbar*/\n        setNotFound(false);\n        const wordEntered = event.target.value.trim();\n        setInputValue(wordEntered);\n        const newFilter = movies.filter((value) => {\n            /*filtering the movie list according to searched movie*/\n            return value.toLowerCase().includes(wordEntered.toLowerCase());\n        });\n        setFilteredMovies([]);\n        if (newFilter.length > 0) {\n            setFilteredMovies(newFilter);\n        }\n        if (wordEntered.length === 0) {\n            setFilteredMovies([]);\n        }\n    };\n\n    const buttonSubmit = () => {\n        /*Submitting the searched movie*/\n        let flag = false;\n\n        for (let movie of movies) {\n            if (inputValue.toLowerCase() === movie.toLowerCase()) {\n                flag = true;\n                break;\n            }\n        }\n        if (flag) {\n            navigate(`/search/${inputValue}`);\n        } else {\n            setNotFound(true);\n        }\n    };\n\n    return (\n        <div className=\"SearchBody\">\n            <div className=\"CompleteBar\">\n                <div className=\"BAR\">\n                    <input\n                        placeholder={placeholder}\n                        className=\"searchingbar\"\n                        type=\"text\"\n                        title=\"Search\"\n                        onChange={handleChange}\n                        onKeyPress={(e) => {\n                            if (e.key === \"Enter\") {\n                                buttonSubmit();\n                            }\n                        }}\n                    />\n                    <button className=\"search-button\" onClick={buttonSubmit}>\n                        <i className=\"fas fa-search\"></i>\n                    </button>\n                </div>\n            </div>\n            {notFound ? (\n                <div className=\"NotFound\">\n                    Sorry! The Movie You Searched for is not present in our data\n                    base\n                </div>\n            ) : null}\n            {filteredMovies.length > 0 ? (\n                <div className=\"searchList\">\n                    {filteredMovies.slice(0, 10).map((movie) => (\n                        <div\n                            className=\"searchItem\"\n                            onClick={() => navigate(`/search/${movie}`)}\n                        >\n                            {movie}\n                        </div>\n                    ))}\n                </div>\n            ) : null}\n        </div>\n    );\n}\n\nexport default SearchBar;\n","// NavBar Component\nimport { Link } from \"react-router-dom\";\nimport \"./styles/NavBarStyles.css\";\nimport Logo from \"./images/Logo2.png\";\nimport React from \"react\";\n\nconst NavBar = ({ isHome }) => {\n  const gitRepoLink =\n    \"https://github.com/Raghavendiran-2002/Content_Recommendation_System_AWS\";\n  return (\n    <div className=\"container header\">\n      <Link to=\"/ \">\n        <img src={Logo} className=\"logo\" alt=\"\" />\n      </Link>\n      {/* if isHome then the button is the github button else its the home button*/}\n      {isHome ? (\n        <a href=\"/\" className=\"header-btn1 bouncy\">\n          <i className=\"fas fa-home\"></i> Home\n        </a>\n      ) : (\n        <a\n          href={gitRepoLink}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"header-btn1 bouncy\"\n        >\n          <i className=\"fa-brands fa-github\"></i> Github\n        </a>\n      )}\n    </div>\n  );\n};\n\nexport default NavBar;\n","// Footer Component\nimport \"./styles/Footer.css\";\nimport React from \"react\";\nconst Footer = () => {\n  return (\n    <footer>\n      <div className=\"footer\">\n        <div id=\"row1\" className=\"row \">\n          <a\n            href=\"https://www.linkedin.com/in/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <i className=\"fa fa-linkedin\"></i>\n          </a>\n          <a\n            href=\"https://github.com/Raghavendiran-2002/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <i className=\"fa-brands fa-github\"></i>\n          </a>\n          <a\n            href=\"https://www.instagram.com/_raghavendiran_/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <i className=\"fa fa-instagram\"></i>\n          </a>\n        </div>\n        <div id=\"row1\" className=\"row\">\n          © Developed By Raghavendiran N\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","// This is the movie card component\nimport \"./styles/Card.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport React from \"react\";\nconst MovieCard = ({ movie }) => {\n    const navigate = useNavigate();\n\n    const currentMovie = movie.title;\n    // opening the clicked movie\n    const goToMovie = () => {\n        navigate(`/search/${currentMovie}`);\n        window.location.reload();\n    };\n    const img_path = \"https://image.tmdb.org/t/p/w342\";\n\n    return (\n        <div onClick={goToMovie} className=\"Main-Card\">\n            {movie.poster_path && (\n                <img\n                    src={img_path + movie.poster_path}\n                    alt={movie.title}\n                    title={movie.title}\n                    className=\"Poster\"\n                />\n            )}\n            <div className=\"Movie-Title\">{movie.title}</div>\n            {movie.vote_average ? (\n                <span className={\"movie-voting\"}>\n                    {movie.vote_average}\n                    <i class=\"fa fa-star\" aria-hidden=\"true\"></i>\n                </span>\n            ) : null}\n        </div>\n    );\n};\n\nexport default MovieCard;\n","import SearchBar from \"./Components/SearchBar\";\nimport NavBar from \"./Components/NavBar\";\nimport Footer from \"./Components/Footer\";\nimport \"./Components/styles/HomeStyles.css\";\nimport MovieCard from \"./Components/MovieCard\";\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nconst Home = () => {\n  const apiKey = process.env.REACT_APP_API_KEY;\n  const [list, setList] = useState([]);\n  const [homeGenreList, setHomeGenreList] = useState([{}]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [currMovies, setCurrMovies] = useState([{}]);\n\n  useEffect(() => {\n    setCurrMovies([]);\n    setSelectedGenres([]);\n    setHomeGenreList([]);\n    setList([]);\n    //getting the list of all movies from our flask server for our searchbar\n    fetch(`${process.env.REACT_APP_API_URL}/api/movies`).then((Response) =>\n      Response.json().then((data) => setList(data.arr))\n    );\n    // getting the list of all genres\n    fetch(`https://api.themoviedb.org/3/genre/movie/list?${apiKey}`).then(\n      (Response) =>\n        Response.json().then((data) => setHomeGenreList(data.genres))\n    );\n  }, []);\n\n  useEffect(() => {\n    setCurrMovies([]);\n    if (selectedGenres.length > 0) {\n      fetch(\n        `https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&${apiKey}&release_date.lte=2019-12-12&with_genres=${encodeURI(\n          selectedGenres.join(\",\")\n        )}`\n      ).then((Response) =>\n        Response.json().then((data) => setCurrMovies(data.results))\n      );\n    }\n  }, [selectedGenres]);\n\n  const onTagClick = (genreId) => {\n    let isPresent = false;\n    for (let id of selectedGenres) {\n      if (id === genreId) {\n        isPresent = true;\n        break;\n      }\n    }\n    if (isPresent) {\n      setSelectedGenres(selectedGenres.filter((item) => item !== genreId));\n    } else {\n      setSelectedGenres((selectedGenres) => [...selectedGenres, genreId]);\n    }\n  };\n  const renderMovies = () =>\n    currMovies.map((movie) => {\n      if (movie) {\n        return (\n          <MovieCard key={movie.id + movie.original_title} movie={movie} />\n        );\n      } else {\n        return null;\n      }\n    });\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"HomePage\">\n        <NavBar isHome={false} />\n        <div className=\"HomeSearch\">\n          {/*Rendering the searchbar */}\n          <SearchBar movies={list} placeholder=\"Search for a Movie\" />\n        </div>\n\n        <h2 className=\"genreHeader\">Get Top Movies Based On Genre </h2>\n        <div className=\"buttonGrid\">\n          {homeGenreList.map((genre) => (\n            <div\n              key={genre.id}\n              onClick={() => onTagClick(genre.id)}\n              className={\n                selectedGenres.includes(genre.id) ? \"genreTagON\" : \"genreTagOFF\"\n              }\n            >\n              {genre.name}\n              {selectedGenres.includes(genre.id) ? (\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n              ) : null}\n            </div>\n          ))}\n        </div>\n      </div>\n      {/*Rendering selected genre movies */}\n      <div className=\"container-fluid HomeMovies\">\n        <div className=\"container HomeMovieGrid\">\n          {currMovies.length > 0 ? renderMovies() : null}\n        </div>\n      </div>\n      <div className=\"HomeFooter\">\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./Components/styles/SearchResultsStyles.css\";\nimport MovieCard from \"./Components/MovieCard\";\nimport NavBar from \"./Components/NavBar\";\nimport ReactPlayer from \"react-player\";\nimport React from \"react\";\nimport Footer from \"./Components/Footer\";\n\nconst SearchResult = () => {\n  const params = useParams();\n  const apiKey = \"api_key=b97316ed479ee4226afefc88d1792909\";\n  const inputValue = params.id; // retrieving the searched movie name\n  const [searchedMovie, setSearchedMovie] = useState({});\n  const [recommendedMovies, setRecommendedMovies] = useState([{}]);\n  const [castMembers, setCastMembers] = useState([{}]);\n  const [genreList, setGenreList] = useState([{}]);\n  const [currGenre, setCurrGenre] = useState([{}]);\n  const [videoData, setVideoData] = useState([]);\n  const [playTrailer, setPlayTrailer] = useState(0);\n  const gotCast = (castData) => {\n    setCastMembers([]);\n\n    let counter = 5;\n    for (let cast of castData) {\n      setCastMembers((castMembers) => [...castMembers, cast]);\n      counter--;\n      if (counter === 0) break;\n    }\n  };\n  const gotVideo = (data) => {\n    if (data.videos && data.videos.results) {\n      const trailer = data.videos.results.find(\n        (vid) => vid.name === \"Official Trailer\"\n      );\n\n      setVideoData(trailer ? trailer : data.videos.results[0]);\n    }\n  };\n\n  const gotRecommendedData = (apiData) => {\n    setRecommendedMovies([]);\n    let counter = 16;\n    // getting data for each of the recommened movies\n    for (let movie of apiData.movies) {\n      fetch(\n        `https://api.themoviedb.org/3/search/movie?${apiKey}&query=${movie}`\n      ).then((Response) =>\n        Response.json().then((data) =>\n          setRecommendedMovies((recommendedMovies) => [\n            ...recommendedMovies,\n            data.results[0],\n          ])\n        )\n      );\n      counter--;\n      if (counter === 0) break;\n    }\n  };\n\n  useEffect(\n    () => {\n      const gotTMDBData = (apiData) => {\n        const realMovieData = apiData.results[0];\n        setCurrGenre([]);\n        setCurrGenre(realMovieData.genre_ids);\n\n        setSearchedMovie(realMovieData);\n        fetch(\n          `https://api.themoviedb.org/3/movie/${realMovieData.id}/credits?${apiKey}`\n        ).then((Response) =>\n          Response.json().then((data) => gotCast(data.cast))\n        );\n\n        fetch(\n          `https://api.themoviedb.org/3/movie/${realMovieData.id}?${apiKey}&append_to_response=videos`\n        ).then((Response) => Response.json().then((data) => gotVideo(data)));\n      };\n      // getting data for the searched movie from tmdb\n      fetch(\n        `https://api.themoviedb.org/3/search/movie?${apiKey}&query=${inputValue}`\n      ).then((Response) => Response.json().then((data) => gotTMDBData(data)));\n      // getting list of recommended movie from our flask server\n      // fetch(`http://localhost:5050/api/similarity/${inputValue}`).then(\n      fetch(\n        `${process.env.REACT_APP_API_URL}/api/similarity/${inputValue}`\n      ).then((Response) =>\n        Response.json().then((data) => gotRecommendedData(data))\n      );\n      // getting the list of all genres\n      fetch(`https://api.themoviedb.org/3/genre/movie/list?${apiKey}`).then(\n        (Response) => Response.json().then((data) => setGenreList(data.genres))\n      );\n    },\n    [inputValue] /*Making api call whenever the searched movie changes */\n  );\n\n  const RenderMovies = () =>\n    recommendedMovies.map((movie) => {\n      if (movie) {\n        return (\n          <MovieCard key={movie.id + movie.original_title} movie={movie} />\n        );\n      } else {\n        return null;\n      }\n    });\n  const RenderTrailer = () => {\n    return (\n      <div>\n        <ReactPlayer\n          url={`https://www.youtube.com/watch?v=${videoData.key}-U`}\n          playing={true}\n          width=\"100%\"\n          height=\"100%\"\n          controls={true}\n          className=\"youtube-container\"\n        />\n      </div>\n    );\n  };\n  const displayGenre = () =>\n    currGenre.map((movieId, ind) => {\n      if (ind >= 3) return null;\n      if (movieId) {\n        for (let obj of genreList) {\n          if (obj.id === movieId) {\n            if (ind === 2) {\n              return <span>{obj.name}</span>;\n            } else {\n              return (\n                <span>\n                  {obj.name}\n                  {\",\"}{\" \"}\n                </span>\n              );\n            }\n          }\n        }\n      } else {\n        return null;\n      }\n      return null;\n    });\n\n  const imgLink = \"https://image.tmdb.org/t/p/original\";\n  const backdropPath = \"https://image.tmdb.org/t/p/w1280\";\n\n  return (\n    <div\n      style={{\n        backgroundImage: `linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)), url(${backdropPath}${searchedMovie.backdrop_path})`,\n      }}\n      className=\"MainBackGround\"\n    >\n      <NavBar isHome={true} />\n\n      <div className=\"container trailerContainer\">\n        {\n          videoData && playTrailer\n            ? RenderTrailer()\n            : null /*Rendering the trailer*/\n        }\n        <div className=\"container .movie-details\">\n          <div className=\"row \">\n            <div className=\"col-md-6 left-box col-md-push-6\">\n              <h1 className=\"topTitle-Movie\">{searchedMovie.title} </h1>\n\n              <p className=\"overviewContent\">{searchedMovie.overview}</p>\n              <p>Cast: </p>\n              <div className=\"casting\">\n                {castMembers.map((member) => {\n                  if (member) {\n                    return (\n                      <a\n                        href={` https://en.wikipedia.org/wiki/${member.name}`}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        {\" \"}\n                        <img\n                          key={JSON.stringify(member.cast_id + member.id)}\n                          src={\n                            member.profile_path\n                              ? `${imgLink}${member.profile_path}`\n                              : \"\"\n                          }\n                          title={member.name}\n                          alt=\"mainPhoto\"\n                        />\n                      </a>\n                    );\n                  }\n                  return null;\n                })}\n              </div>\n\n              <div>\n                <b>Rating{\" : \"}</b>\n                {searchedMovie.vote_average}\n                {\"/10 \"}\n\n                <i className=\"fa-solid fa-star\"></i>\n              </div>\n              <div>\n                <b> Release Date </b>\n                {\" : \"} {searchedMovie.release_date}\n              </div>\n              <div>\n                <b>Genres</b>\n                {\" : \"}\n                {currGenre ? displayGenre() : null}\n              </div>\n              <div>\n                <button\n                  className=\"trailer-bttn \"\n                  onClick={() => setPlayTrailer(true)}\n                >\n                  <i className=\"fa-solid fa-play\"></i>\n                  {\" Watch Trailer\"}\n                </button>\n              </div>\n            </div>\n            <div className=\"col-md-6 col-md-pull-6 text-center\">\n              <img\n                className=\"main-img\"\n                src={`https://image.tmdb.org/t/p/w500${searchedMovie.poster_path}`}\n                alt=\"Movie\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/*Trailer Close Button */}\n      <div className={playTrailer ? \"DisplayOn\" : \"DisplayOFF\"}>\n        <button className=\"close-bttn\" onClick={() => setPlayTrailer(false)}>\n          Close Trailer\n        </button>\n      </div>\n\n      <div className=\"container-fluid recommendedMovies\">\n        <h2 className=\" container RecommendHeading\">Recommended Movies</h2>\n        {/*Rendering the recommended movie cards */}\n        <div className=\"container recommendedGrid\">{RenderMovies()}</div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default SearchResult;\n","import \"./App.css\";\nimport Home from \"./Pages/Home\";\nimport SearchResult from \"./Pages/SearchResult\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport React from \"react\";\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <Routes>\n                    <Route exact path=\"/\" element={<Home />} />\n                    <Route\n                        exact\n                        path=\"/search/:id\"\n                        element={<SearchResult />}\n                    />\n                </Routes>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}